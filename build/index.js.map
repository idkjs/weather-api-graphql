{"version":3,"sources":["../src/index.js"],"names":["require","app","use","server","ApolloServer","typeDefs","schema","resolvers","applyMiddleware","path","port","listen","console","log"],"mappings":";;AACA;;AACA;;AACA;;AAGA;;AACA;;;;AAPAA,OAAO,CAAC,SAAD,CAAP;;AASA,IAAMC,GAAG,GAAG,uBAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,oBAAR;AAEA,IAAMC,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC9BC,EAAAA,QAAQ,EAAEC,eADoB;AAE9BC,EAAAA,SAAS,EAATA;AAF8B,CAAjB,CAAf;AAKAJ,MAAM,CAACK,eAAP,CAAuB;AACrBP,EAAAA,GAAG,EAAHA,GADqB;AAErBQ,EAAAA,IAAI,EAAE;AAFe,CAAvB;AAIA,IAAMC,IAAI,GAAG,IAAb;AACAT,GAAG,CAACU,MAAJ,CAAW;AACTD,EAAAA,IAAI,EAAJA;AADS,CAAX,EAEG,YAAM;AACPE,EAAAA,OAAO,CAACC,GAAR,0DAAoDH,IAApD;AACD,CAJD","sourcesContent":["require('now-env');\nimport cors from 'cors';\nimport express from 'express';\nimport {\n  ApolloServer\n} from 'apollo-server-express';\nimport schema from \"./schema\";\nimport resolvers from './resolvers';\n\nconst app = express();\napp.use(cors());\n\nconst server = new ApolloServer({\n  typeDefs: schema,\n  resolvers\n});\n\nserver.applyMiddleware({\n  app,\n  path: '/graphql'\n});\nconst port = 8080;\napp.listen({\n  port\n}, () => {\n  console.log(`ðŸš€  Server ready at http://localhost:${port}/graphql`);\n});\n"],"file":"index.js"}